{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, jwtHelper) {\n      this.http = http;\n      this.jwtHelper = jwtHelper;\n      const token = localStorage.getItem('jwt_token');\n      if (token) this.currentUser = jwtHelper.decodeToken(token);\n    }\n\n    login(credentials) {\n      return this.http.post('/api/authenticate', credentials).pipe(map(result => {\n        if (result && result['access_token']) {\n          localStorage.setItem('jwt_token', result['access_token']);\n          this.currentUser = this.jwtHelper.decodeToken(result['access_token']);\n          console.log(\"current user\", this.currentUser);\n          return true;\n        } else return false;\n      }));\n    }\n\n    logout() {\n      localStorage.removeItem('jwt_token');\n      this.currentUser = null;\n    }\n\n    isLoggedIn() {\n      return !this.jwtHelper.isTokenExpired();\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.JwtHelperService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}